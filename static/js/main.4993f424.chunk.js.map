{"version":3,"sources":["components/Navbar.js","components/Form.js","components/About.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","Fragment","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","about","class","onClick","toggleMode","role","htmlFor","Form","_useState","useState","_useState2","Object","slicedToArray","text","setText","heading","value","rows","onChange","event","console","log","target","style","background","color","newText","toUpperCase","showAlert","document","newText2","toLowerCase","revArr","split","newText4","reverse","join","getElementById","select","navigator","clipboard","writeText","newText5","filter","y","length","About","backgroundColor","mystyle","setmystyle","_useState3","_useState4","btntext","setBtnText","aria-labelledby","data-bs-parent","Alert","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.4993f424.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n  <>\r\n  <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/about\">{props.about}</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href='/'>Contact</a>\r\n        </li>\r\n      </ul>\r\n      <div class={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input class=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n  <label class=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Mode Switch</label>\r\n</div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n\r\n  </>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {title: PropTypes.string.isRequired,\r\n                    about: PropTypes.string}","import React, {useState} from 'react';\r\n\r\n\r\nexport default function Form(props) {\r\n    const func = () => {\r\n        console.log(\"Uppercase clicked\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Uppercase\", \"success\");\r\n        document.title = \"UpperCase page\";\r\n    }\r\n    const OnChange = (event) => {\r\n        console.log(\"On change\");\r\n        setText(event.target.value);\r\n    }\r\n    const func2 = () => {\r\n        console.log(\"lowercase clicked\"+text);\r\n        let newText2 = text.toLowerCase();\r\n        setText(newText2);\r\n        props.showAlert(\"Converted to LowerCase\", \"success\");\r\n    }\r\n\r\n    const cleartext = () => {\r\n        let newText3 = \" \";\r\n        setText(newText3);\r\n        props.showAlert(\"Text Cleared\", \"danger\");\r\n    }\r\n\r\n    const revtext = () => {\r\n        let revArr = text.split(\"\");\r\n        revArr = revArr.reverse();\r\n\r\n        let newText4 = revArr.join();\r\n        setText(newText4);\r\n    }\r\n\r\n    const copytext = ()=>{\r\n        var text = document.getElementById(\"mybox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"copied to clipboard\", \"warning\");\r\n    }\r\n\r\n    const extraspace =()=>{\r\n        let newText5 = text.split(/[ ]+/);\r\n        setText(newText5.join(\" \"));\r\n        props.showAlert(\"extra space remove\", \"success\");\r\n    }\r\n\r\n    const [text, setText] = useState('');\r\n    \r\n    \r\n    return (\r\n    <>\r\n        <div className='container'>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" value={text} id=\"mybox\" rows=\"5\" onChange={OnChange} style={{background: props.mode==='dark'?'#071472':'white', color: props.mode==='dark'?'white':'black'}}></textarea>\r\n            <button className=\"btn btn-primary my-3 mx-2\" onClick={func}>Convert to upperCase</button>\r\n            <button className=\"btn btn-primary my-3 mx-2\" onClick={func2}>Convert to lowerCase</button>\r\n            <button className=\"btn btn-primary my-3 mx-2\" onClick={cleartext}>Clear text</button>\r\n            <button className=\"btn btn-primary my-3 mx-2\" onClick={revtext}>Reverse</button>\r\n            <button className=\"btn btn-primary my-3 mx-2\" onClick={copytext}>Copy</button>\r\n            <button className=\"btn btn-primary my-3 mx-2\" onClick={extraspace}>Remove Extra Space</button>\r\n            </div>\r\n        </div>\r\n        <div className=\"container\">\r\n            <h1>Your Text Count</h1>\r\n            <p><b>{text.split(\" \").filter((y) => (y!==\"\")).length}</b> words and <b>{text.length}</b> character</p>\r\n            <p>{0.008 * text.split(\" \").length} Minutes</p>\r\n            <h1>Text viewed</h1>\r\n            <p className='my-2'>{text.length>0?text:\"Enter text to priview\"}</p>\r\n        </div>\r\n    </>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nexport default function About(props) {\r\n    const [mystyle, setmystyle] = useState({\r\n        color:\"white\",\r\n        backgroundColor:\"#071472\"\r\n    })\r\n    const [btntext, setBtnText] = useState(\"Light mode\");\r\n\r\n    const toggleStyle = ()=>{\r\n        if(mystyle.color === \"white\"){\r\n            setmystyle({\r\n                    color:\"black\",\r\n                    backgroundColor:\"white\"\r\n            })\r\n            setBtnText(\"Dark mode\");\r\n        }\r\n        else{\r\n            setmystyle({\r\n                color:\"white\",\r\n                backgroundColor:\"#071472\"\r\n            })\r\n            setBtnText(\"Light mode\");\r\n        }\r\n    }\r\n\r\n  return (\r\n        <div className='container' style={mystyle}>\r\n            <h1>About Us</h1>\r\n            <div className=\"accordion\" id=\"accordionExample\" style={mystyle}>\r\n            <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"headingOne\">\r\n            <button className=\"accordion-button\" style={mystyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                Accordion Item #1\r\n            </button>\r\n            </h2>\r\n            <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\" style={mystyle}>\r\n                <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n            </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n            <button className=\"accordion-button collapsed\" style={mystyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                Accordion Item #2\r\n            </button>\r\n            </h2>\r\n            <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\" style={mystyle}>\r\n                <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n            </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"headingThree\">\r\n            <button className=\"accordion-button collapsed\" style={mystyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                Accordion Item #3\r\n            </button>\r\n            </h2>\r\n            <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\" style={mystyle}>\r\n                <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n            </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        <button onClick={toggleStyle} type=\"button\" className=\"btn btn-primary my-3\">{btntext}</button>\r\n      </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n    props.alert &&<div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","// import logo from './logo.svg';\nimport React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Form from './components/Form';\nimport About from './components/About';\nimport { useState } from 'react';\nimport Alert from './components/Alert';\nimport { unstable_renderSubtreeIntoContainer } from 'react-dom/cjs/react-dom.development';\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n    // setInterval(() => {\n    //   document.title = \"this is best app\";\n    // }, 1500);\n    // setInterval(() => {\n    //   document.title = \"install it here\";\n    // }, 2000);\n  }\n\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#071472';\n      document.body.style.color = 'white';\n      showAlert(\"Dark is on\", \"success\");\n      document.title = \"Dark mode\";\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      document.body.style.color = '#071472';\n      showAlert(\"light is on\", \"success\");\n      document.title = \"Light mode\";\n    }\n  }\n\n  return (\n    <>\n    {/* <Router> */}\n    <Navbar title=\"Akshu\" about=\"About Us\" mode={mode} toggleMode={toggleMode} />\n    <Alert alert={alert}/>\n    <div className=\"container\">\n    </div>\n    <div className=\"container\">\n    {/* <Switch> */}\n          {/* <Route exact path=\"/about\"> */}\n            \n          {/* </Route> */}\n          {/* <Route exact path=\"/\"> */}\n            <Form showAlert={showAlert} heading=\"Form\" mode={mode} />\n          {/* </Route> */}\n        {/* </Switch> */}\n    </div>\n    <About />\n    {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}